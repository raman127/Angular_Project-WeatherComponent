{"version":3,"sources":["./src/app/components/display/display.component.ts","./src/app/components/display/display.component.html","./src/environments/environment.ts","./src/app/services/weatherdata.service.ts","./src/app/components/selection/selection.component.ts","./src/app/components/selection/selection.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Weather } from '../../app.component'\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.css']\n})\nexport class DisplayComponent {\n  weather: Weather = {\n    city: \"No City\",\n    conditions: \"-\",\n    temperature: 0,\n    icon: \"\"\n\n}\nupdate(weather: Weather) {\n  this.weather = weather\n}\n}\n","\n    <h2>{{weather.city}}</h2>\n    \n    <img [src]=\"weather.icon\" style=\"float: left;\"/>\n    <p>\n      Conditions: {{weather.conditions}}<br/>\n      Temperature: {{weather.temperature}} &deg;C<br/>\n    </p>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\nlet serviceUrl: String = 'https://api.openweathermap.org/data/2.5/weather'\nlet apiKey: String = '3bd2239d25a176f14b31c1aeee43173f' // insert your API key here\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n\n  constructor(private http: HttpClient) { }\n\n  load(city: String) {\n    return this.http.get(serviceUrl + '?q=' + city + '&APPID=' + apiKey)\n  }\n\n  getIconUrl(icon: String) {\n    return 'http://openweathermap.org/img/w/' + icon + \".png\"\n  }\n}","import { Component, Output, EventEmitter } from '@angular/core'\nimport { WeatherDataService } from '../../services/weatherdata.service'\nimport { Weather } from '../../app.component'\n\n@Component({\n  selector: 'app-selection',\n  templateUrl: './selection.component.html',\n  styleUrls: ['./selection.component.css']\n})\nexport class SelectionComponent {\n  @Output() onSelection: EventEmitter<Weather> = new EventEmitter<Weather>()\n  weather: Weather = new Weather()\n  city: String = \"\"\n\n  constructor(private weatherData: WeatherDataService) { }\n\n  submit() {\n    this.weatherData.load(this.city).subscribe(data => {\n      this.weather.city = data['name']\n      this.weather.conditions = data['weather'][0]['main']\n      this.weather.temperature = Math.round((data['main']['temp'] - 273.15))\n      this.weather.icon = this.weatherData.getIconUrl(data['weather'][0]['icon'])\n\n      this.onSelection.emit(this.weather)\n    })\n  }\n}","\n    <form (ngSubmit)=\"submit()\">\n        City:<br>\n        <input type=\"text\" name=\"city\" [(ngModel)]=\"city\"><br>\n        <input type=\"submit\" value=\"Submit\">\n    </form>\n\n","import { Component } from '@angular/core';\n\nexport class Weather {\n  city: String\n  conditions: String\n  temperature: number\n  icon: String\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weather';\n}","<app-display #display></app-display>\n<app-selection (onSelection)=\"display.update($event)\"></app-selection>\n","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { FormsModule }   from '@angular/forms'\n\nimport { AppComponent } from './app.component'\nimport { DisplayComponent } from './components/display/display.component'\nimport { SelectionComponent } from './components/selection/selection.component'\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { WeatherDataService } from './services/weatherdata.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DisplayComponent,\n    SelectionComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [WeatherDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}